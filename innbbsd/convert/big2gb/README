    Big5/GB Chinese Text Convertor

1. Requirement for building

You need a working C compiler, a make program and a Python
interpreter to build this software.

The converting table is gerenated according to the data files
from Unicode Consortium. Three files are needed: Unihan.txt
for traditional-simplified variant mapping, CP936.TXT for GBK-
Unicode mapping and CP950.TXT for Big5-Unicode mapping.
Microsoft CP936 is used instead of GB2312, and CP950 is used
instead of BIG5, since most master pieces of BBS ASCII-art uses
vendor-specific extentions over standard charsets.

You can get these three files from ftp.unicode.org.
CP936.TXT and CP950.TXT are in the following path:
	/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/
Unihan.txt can be found in Unidata or version specific directory,
maybe you sould rename it after downloaded.

Especially, if you are inside Zhejiang University, you can download
these tables from ftp://ftp.zju.edu.cn/pub/ftp.unicode.org/; there
is also other site such as ftp.gbuchina.org which have mirrored data
from ftp.unicode.org, for poor CERNET users.

2. Build

Just run
	make [PYTHON=/your/python] [CC=/your/cc] [CFLAGS=your_cflags]...

It will take quite several minutes to build big2gb, depending
on your hardware configuration.

After big2gb is built, you can copy it to anywhere you like.

3. Use

Run big2gb. It reads from stdin and write to stdout, converting from Big5
to GB. You can use redirection or pipe for its input and/or output.
Big2gb receives an argument '-r', for converting from GB to Big5.

4. Future

Since the converting table is horriblly large, the executable file is large
too. If many instances of this program are running, they will spend a lot
of memory. It may be an interesting idea to use DLL or shared memory or even
a daemon listening on unix-domain socket. But I am too lazy to do that. :(


Adoal Xu, adoal@shanty-bbs

2001.12.15


